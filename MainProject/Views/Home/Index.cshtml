@{
	ViewData["Title"] = "Home Page";
}
@using ComponentLibrary.ViewComponents
@using ComponentLibrary.Models
@model string
inject ComponentLibrary.Models.ListOfListsViewModel test

@{
	List<List<int>> testList = new List<List<int>>();
	testList.Add(new List<int>() { 2, 6, 8 });
	testList.Add(new List<int>() { 2, 3, 9, 7 });
	testList.Add(new List<int>() { 41, 18 });
	string teststring = "2" + Environment.NewLine + "6" + Environment.NewLine + "8;" + "2" + Environment.NewLine + "3" + Environment.NewLine + "9" + Environment.NewLine + "7;" + "41" + Environment.NewLine + "18";
}
<div>
	Input desired number of lists and press "Enter": <input id="numberOfLists" type="number" onkeypress="inputNumberOfLists(event)" />
	<br />
	<div id="lists"></div>
	<input type="button" value="Get result" onclick="buttonClick()" />
</div>
<div id="Result"></div>

<div>
	@await Component.InvokeAsync(nameof(ListViewComponent), new { lists = testList })
	await test.GetResultString()
</div>

<script type="text/javascript">
	function listOnKeyPress(e) {
		var k = e.which;
		if (!(k == 13 || (k >= 48 && k < 58)))
			e.preventDefault();
	}
</script>

<script type="text/javascript">
	function buttonClick() {
		document.getElementById("Result").innerHTML = @Url.Action("Calculate", "Home", new { inputs = teststring });
	}
</script>

<script type="text/javascript">
	function inputNumberOfLists(e) {
		e = e || window.event;
		var key = e.keyCode;
		if (key == 13) //Enter
		{
			var number = document.getElementById("numberOfLists").value;
			var container = document.getElementById("lists");
			container.innerHTML = "";
			for (var i = 0; i < number; i++) {
				container.innerHTML += "<textarea name=\"List" + i + "\" rows=\"10\" cols=\"15\" onkeypress=\"listOnKeyPress(event)\"></textarea>"
			}
			return true; //return true to submit, false to do nothing
		}
	}
</script>
